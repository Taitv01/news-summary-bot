#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# ... c√°c d√≤ng import kh√°c ...
from content_extractor import extract_content
from telegram_sender import send_telegram_message
from summarizer import summarize_with_gemini # <-- TH√äM D√íNG N√ÄY

# ... c√°c h√†m kh√°c gi·ªØ nguy√™n ...

def process_news():
    # ... ph·∫ßn ƒë·∫ßu h√†m gi·ªØ nguy√™n ...
    
    try:
        # ... logic l·∫•y tin t·ª©c gi·ªØ nguy√™n ...
        
        for article in successful_articles:
            # L·∫•y n·ªôi dung
            response = scraper.get_content_with_retry(article['link'])
            
            if response and response.status_code == 200:
                content = extract_content(response.text, article['link'])
                
                if content:
                    # G·ªåI GEMINI ƒê·ªÇ T√ìM T·∫ÆT
                    logger.info(f"ƒêang t√≥m t·∫Øt b√†i b√°o: {article['title'][:30]}...")
                    summary = summarize_with_gemini(content)
                    
                    article['summary'] = summary # L∆∞u l·∫°i n·ªôi dung t√≥m t·∫Øt
                    
                    successful_articles.append(article)
                    processed_links.add(article['link'])
                    logger.info(f"[TH√ÄNH C√îNG] ƒê√£ x·ª≠ l√Ω v√† t√≥m t·∫Øt: {article['title'][:50]}...")
                # ...
        
        # ...

        if successful_articles:
            # G·ª¨I TIN NH·∫ÆN T√ìM T·∫ÆT N√ÇNG CAO ƒê·∫æN TELEGRAM
            for article in successful_articles:
                # ƒê·ªãnh d·∫°ng MarkdownV2
                title = article['title'].replace('-', r'\-').replace('.', r'\.').replace('!', r'\!').replace('(', r'\(').replace(')', r'\)')
                link = article['link'].replace('-', r'\-').replace('.', r'\.')
                summary_text = article.get('summary', 'Kh√¥ng c√≥ t√≥m t·∫Øt').replace('-', r'\-').replace('.', r'\.').replace('!', r'\!').replace('(', r'\(').replace(')', r'\)')
                
                message = f"üì∞ *{title}*\n\n"
                message += f"{summary_text}\n\n"
                message += f"[ƒê·ªçc b√†i vi·∫øt ƒë·∫ßy ƒë·ªß]({link})"
                
                send_telegram_message(message)
                time.sleep(1) # Th√™m ƒë·ªô tr·ªÖ 1 gi√¢y gi·ªØa c√°c tin nh·∫Øn
        # ...

    finally:
        scraper.close()
    
    # ...
